df <- read.csv("tallot.csv")
num_a
df(num_a)
df_a <- df$num_a
df_a
df$num_a
df_a[1]
df <- read.csv("tallot.csv")
shiny::runApp()
c(120, 1)
install.packages("fmsb")
runApp()
#パッケージのインストール
install.packages("devtools")
devtools::install_github("ricardo-bion/ggradar")
shiny::runApp()
install.packages("fmsb")
install.packages("fmsb")
help(rnorm)
shiny::runApp()
install("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
shiny::runApp()
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/servant_list')
runApp()
maxmin <- data.frame(
num_a = c(100, 0),
num_b = c(100, 0),
num_c = c(100, 0),
num_d = c(100, 0),
num_e = c(100, 0),
num_f = c(100, 0))
RNGkind("Mersenne-Twister")
set.seed(123)
dat <- data.frame(
num_a = runif(3, 1, 5),
num_b = rnorm(3, 10, 2),
num_c = c(0.5, NA, 3),
num_d = runif(3, 1, 5),
num_e = c(5, 2.5, 4),
num_f = C(1,1,1))
runApp()
RNGkind("Mersenne-Twister")
set.seed(123)
dat <- data.frame(
num_a = runif(3, 1, 5),
num_b = rnorm(3, 10, 2),
num_c = c(0.5, NA, 3),
num_d = runif(3, 1, 5),
num_e = c(5, 2.5, 4),
num_f = c(1,1,1))
dat <- rbind(maxmin, dat)
VLabel <- colnames(dat)
radarchart(dat, axistype = 2, seg = 5, plty = 1, vlcex = 1.5,
centerzero = TRUE, vlabels = VLabel,
title = "(axis=1, 5 segments, with specified vlabels)")
df <- read.csv("tallot.csv")
df_a <- df$num_a
df_a
num_a[1]
df_a[1]
dat <- data.frame(
num_b = c(df_b[1], df_b[2], df_b[3],df_b[4]),
num_c = c(df_c[1], df_c[2], df_c[3],df_c[4]),
num_d = c(df_d[1], df_d[2], df_d[3],df_d[4]),
num_e = c(df_e[1], df_e[2], df_e[3],df_e[4]),
num_f = c(df_f[1], df_f[2], df_f[3],df_f[4]))
dat <- rbind(maxmin, dat) #データの結合
df <- read.csv("tallot.csv")
df_a <- df$num_a
df_b <- df$num_b
df_c <- df$num_c
df_d <- df$num_d
df_e <- df$num_e
df_f <- df$num_f
dat <- data.frame(
num_b = c(df_b[1], df_b[2], df_b[3],df_b[4]),
num_c = c(df_c[1], df_c[2], df_c[3],df_c[4]),
num_d = c(df_d[1], df_d[2], df_d[3],df_d[4]),
num_e = c(df_e[1], df_e[2], df_e[3],df_e[4]),
num_f = c(df_f[1], df_f[2], df_f[3],df_f[4]))
dat <- rbind(maxmin, dat) #データの結合
radarchart(dat, axistype = 2, seg = 5, plty = 1, vlcex = 1.5,
centerzero = TRUE, vlabels = VLabel,
title = "(axis=1, 5 segments, with specified vlabels)")
#最大、最小データの準備
maxmin <- data.frame(
num_b = c(100, 0),
num_c = c(100, 0),
num_d = c(100, 0),
num_e = c(100, 0),
num_f = c(100, 0))
#描写データの準備
RNGkind("Mersenne-Twister")
set.seed(123)
dat <- data.frame(
num_b = c(df_b[1], df_b[2], df_b[3],df_b[4]),
num_c = c(df_c[1], df_c[2], df_c[3],df_c[4]),
num_d = c(df_d[1], df_d[2], df_d[3],df_d[4]),
num_e = c(df_e[1], df_e[2], df_e[3],df_e[4]),
num_f = c(df_f[1], df_f[2], df_f[3],df_f[4]))
dat <- rbind(maxmin, dat) #データの結合
radarchart(dat, axistype = 2, seg = 5, plty = 1, vlcex = 1.5,
centerzero = TRUE, vlabels = VLabel,
title = "(axis=1, 5 segments, with specified vlabels)")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("devtools")
devtools::install_github("ricardo-bion/ggradar")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv("tallot.csv")
df_id <- df$id
df_a <- df$para_a
df_b <- df$para_b
df_c <- df$para_c
df_d <- df$para_d
df_e <- df$para_e
df_sentence <- df$sentence
df_sentence[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/servant_list')
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythems")
install.packages("shinythems")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
outfile = img(src="r_1.jpg", height = 300, width = 150)
View(outfile)
View(outfile)
outfile
img(src="r_1.jpg", height = 300, width = 150)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
actionButton("button1",label = "",icon = icon("r_1.jpg"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/english/English')
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/ex')
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/servant_list')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tags$button
runApp()
runApp()
actionButton("button1",label = "",icon = icon(""))
runApp()
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/english/English')
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/ex')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('I:/９９_その他/c.gengoes/作業用/【個人用】/御法川/R関連/ex')
runApp()
runApp()
runApp()
runApp()
lapply(1:ans_num,function(x){
tmp_name = paste("button_",x)
tags$button(
id = "tmp_name",
class = "btn action-button",
tags$img(src = paste("r_",x,".jpg",sep =""),
height = "300",
width = "150")
)
})
View(outfile)
lapply(1:3,function(x){
tmp_name = paste("button_",x)
tags$button(
id = "tmp_name",
class = "btn action-button",
tags$img(src = paste("r_",x,".jpg",sep =""),
height = "300",
width = "150")
)
})
runApp()
output$fuga1 <- renderUI({
tags$button(
id = "button1",
class = "btn action-button",
tags$img(src = paste("r_",0,".jpg",sep = ""),
height = "300px",
width = "150px"
)
)
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unif(1:3)
unif(1,3)
ran(1,3)
runif(1,3)
runif(1,3)
dunif(1,3)
dunif(x,1,3)
runif(1,1,3)
runif(1,1,1)
runif(1,1,2)
runif(1,1,2)
runif(1,1,2)
runif(1,1,2)
runif(1,1,2)
runif(1,1,2)
runif(1,1,2)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
runif(1,1,4)
x = runif(1,1,4)
floor(x)
x = runif(1,1,4)
floor(x)
x = runif(1,1,4)
floor(x)
x
x = runif(1,1,4)
x
floor(x)
x = runif(1,1,4)
floor(x)
x = runif(1,1,4)
floor(x)
x = runif(1,1,4)
floor(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
para[5] = c(100,0)
para(5) = c(100,0)
runApp()
apply(1:4){}
apply(1:4,function(x){c(100,0)}
)
lapply(1:4,function(x){c(100,0)})
runApp()
runApp()
maxmin <- data.frame(
# lapply(1:5,function(x){para = c(100,0)})
#
para_a = c(100, 0),
para_b = c(100, 0),
para_c = c(100, 0),
para_d = c(100, 0),
para_e = c(100, 0))
maxmin
View(maxmin)
matrix(c(100,0), nrow=2, ncol=3, byrow=T)
matrix(c(100,0), nrow=2, ncol=5, byrow=T)
matrix(c(100,0), ncol=5 , nrow=2 , byrow=T)
matrix(1:6, nrow=2, ncol=3)
matrix(c(100,0), nrow=2, ncol=5)
maxmin <- data.frame(
# para_a = c(100, 0),
# para_b = c(100, 0),
# para_c = c(100, 0),
# para_d = c(100, 0),
# para_e = c(100, 0)
matrix(c(100,0), nrow=2, ncol=5)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("fmsb")
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp('~/learnEnglish/word_test')
